org: ucmorisenone
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: senior-project
service: senior-project

plugins:
  - serverless-offline
  - serverless-s3-sync

stages:
  default:
    params:
      usersTableName: 'users-table-${sls:stage}'
      projectsTableName: 'projects-table-${sls:stage}'

provider:
  name: aws
  runtime: nodejs20.x
  iam:
    role:
      statements: # Allow lambda functions full access to DB
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [UsersTable, Arn]
            - Fn::GetAtt: [ProjectsTable, Arn]
  environment:
    USERS_TABLE: ${param:usersTableName}
    PROJECTS_TABLE: ${param:projectsTableName}

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${param:usersTableName}
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: username
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    ProjectsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${param:projectsTableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: N
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

functions:
  login:
    handler: backend/src/handlers/login.handler
    events:
      - http:
          path: login
          method: post
          cors: true

  projects:
    handler: backend/src/handlers/projects/list.handler
    events:
      - http:
          path: projects
          method: get
          cors: true

  updateProject:
    handler: backend/src/handlers/updateProject.handler
    events:
      - http:
          path: project/update
          method: post
          cors: true

  users:
    handler: backend/src/handlers/users/list.handler
    events:
      - http:
          path: users
          method: get
          cors: true

package:
  exclude:
    - '**'
  include:
    - backend/src/**
    - frontend/dist/frontend/browser/**

custom:
  s3Sync:
    - bucketName: risenonefrontend
      localDir: frontend/dist/frontend/browser/
      params:
        - index.html:
          CacheControl: 'no-cache'
